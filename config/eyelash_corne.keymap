#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            require-prior-idle-ms = <190>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMAK-DH";
            bindings = <
&kp ESC         &kp Q        &kp W             &kp F           &kp P           &kp B                                   &kp LC(UP)                      &kp J        &kp L            &kp U            &kp Y         &kp SEMI     &kp BSPC
&kp TAB         &hm LCTRL A  &hm LEFT_SHIFT R  &hm LEFT_ALT S  &hm LEFT_GUI T  &kp G                     &kp LC(LEFT)  &rgb_ug RGB_TOG  &kp LC(RIGHT)  &kp M        &hm RIGHT_GUI N  &hm RIGHT_ALT E  &hm RSHIFT I  &hm RCTRL O  &kp SQT
&kp LEFT_SHIFT  &kp Z        &kp X             &kp C           &kp D           &kp V        &kp SPACE                  &kp LC(DOWN)                    &kp K        &kp H            &kp COMMA        &kp DOT       &kp FSLH     &kp LEFT_CONTROL
                                               &kp LGUI        &mo 2           &lt 3 SPACE                                                             &lt 3 ENTER  &mo 1            &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &rgb_ug RGB_EFF  &kp N7        &kp N8        &kp NUMBER_9  &rgb_ug RGB_ON                                 &mmv MOVE_UP                     &kp DEL          &kp PAGE_UP      &kp UP_ARROW  &kp PAGE_DOWN  &kp INSERT  &trans
&trans  &rgb_ug RGB_BRI  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &rgb_ug RGB_OFF                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HOME         &kp LEFT         &kp DOWN      &kp RIGHT      &kp END     &trans
&trans  &rgb_ug RGB_BRD  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0           &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &trans        &trans         &trans      &trans
                                       &trans        &trans        &trans                                                                          &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH    &kp DLLR        &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp RCLK     &mkp MCLK   &mkp LCLK       &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &bt BT_NXT  &bt BT_CLR_ALL  &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans      &trans          &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1  &kp F2      &kp F3     &kp F4      &kp F5                                  &mmv MOVE_UP                     &mkp LCLK       &msc SCRL_UP       &mmv MOVE_UP      &msc SCRL_DOWN   &mkp RCLK        &kp F10
&trans  &trans  &mkp RCLK   &mkp MCLK  &mkp LCLK   &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &msc SCRL_LEFT  &mmv MOVE_LEFT     &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &msc SCRL_RIGHT  &kp F11
&trans  &trans  &bt BT_PRV  &trans     &bt BT_NXT  &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp K_PREVIOUS  &kp K_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp K_VOLUME_UP  &kp K_FORWARD    &kp F12
                            &trans     &trans      &trans                                                                   &trans          &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
